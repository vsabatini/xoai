//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.01.13 at 08:24:23 PM WET 
//

package com.lyncode.xoai.dataprovider.xml.oaipmh;

import com.lyncode.xoai.dataprovider.exceptions.WritingXmlException;
import com.lyncode.xoai.dataprovider.xml.EchoElement;
import com.lyncode.xoai.dataprovider.xml.XMLWritable;
import com.lyncode.xoai.dataprovider.xml.XmlOutputContext;
import com.lyncode.xoai.dataprovider.xml.xoai.Metadata;
import org.apache.commons.io.IOUtils;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import java.io.IOException;
import java.io.InputStream;

/**
 * Metadata must be expressed in XML that complies with another XML Schema
 * (namespace=#other). Metadata must be explicitly qualified in the response.
 *
 *
 * Java class for metadataType complex type.
 *
 *
 * The following schema fragment specifies the expected content contained within
 * this class.
 *











 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "metadataType")
public class MetadataType implements XMLWritable {
    private String string;

    @XmlValue
    protected Metadata value;

    /**
     * Sets the value of the any property.
     *
     * @param value allowed object is ;
     */
    public MetadataType(Metadata value) {
        this.value = value;
    }

    public MetadataType(String value) {
        this.string = value;
    }

    public MetadataType(InputStream value) throws IOException {
        this.string = IOUtils.toString(value);
    }

    @Override
    public void write(XmlOutputContext context) throws WritingXmlException {
        if (this.value != null)
            this.value.write(context);
        else {
//        	if(string.isEmpty()) return;  //VSTODO:  utf8 controllare perch√© certi item generano metadati vuoti
            EchoElement elem = new EchoElement(string);
            elem.write(context);
        }
    }

}
